using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DTO;
using BUS;
namespace GUI
{
    public partial class frmGiaoVien : DevExpress.XtraEditors.XtraForm
    {
        HandleButtonCURD handle = new HandleButtonCURD();
        BUSGiaoVien bus_GiaoVien = new BUSGiaoVien();
        BUSBoMon bus_BoMon = new BUSBoMon();
        BUSNguoiDung bus_NguoiDung = new BUSNguoiDung();
        BUSDiaChi bus_DiaChi = new BUSDiaChi();
        BindingSource bs = new BindingSource();

        const string _THEM_MOI = "Thêm";
        const string _SUA_ = "Sửa";
        const string _XOA_ = "Xóa";
        const string _KHONG_ = "Xem";

        public frmGiaoVien()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard

            _bindingDataSourceGrid();
            cbBomon.Properties.DataSource = bus_BoMon.get_all_datatable();
        }

        private void labelControl6_Click(object sender, EventArgs e)
        {

        }

        private void gridViewGV_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {

        }

        private void frmGiaoVien_Load(object sender, EventArgs e)
        {



        }

        private void bindingNavigatorAddNewItem_Click(object sender, EventArgs e)
        {

        }

        private void groupControl2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void gridViewGV_RowClick_1(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            if (e.RowHandle < 0) return;
            All_button_enable(true);
            _Enable_Button(btnLuu,false);
            _ReadOnly_Text(true);
            //txtTengv.Text = gridViewGV.FocusedRowHandle.ToString();
            txtMagv.Text = gridViewGV.GetFocusedRowCellValue("maNguoiDung").ToString();
            txtTengv.Text = gridViewGV.GetFocusedRowCellValue("tenNguoiDung").ToString();
            //cbBomon.Text = "";
            cbBomon.Text = gridViewGV.GetFocusedRowCellValue("tenMonHoc").ToString();

            String gt = gridViewGV.GetFocusedRowCellValue("gioiTinh").ToString();
            int gioitinh = (gt.Equals("Nam")) ? 1 : 0;
            if (gioitinh == 1)
            {
                rbNam.Checked = true;
                rbNu.Checked = false;
            }
            else
            {
                rbNam.Checked = false;
                rbNu.Checked = true;
            }

            txtNgaySinh.Text = gridViewGV.GetFocusedRowCellValue("ngaySinh").ToString();
            txtSDT.Text = gridViewGV.GetFocusedRowCellValue("sDT").ToString();
            txtEmail.Text = gridViewGV.GetFocusedRowCellValue("email").ToString();
            txtTaiKhoan.Text = gridViewGV.GetFocusedRowCellValue("taiKhoan").ToString();
            txtMatKhau1.Text = handle.Decryptor(gridViewGV.GetFocusedRowCellValue("matKhau").ToString());
            txtMaDiachi.Text = gridViewGV.GetFocusedRowCellValue("maDiaChi").ToString();
            txtSonha.Text = gridViewGV.GetFocusedRowCellValue("soNha").ToString();
            txtDuong.Text = gridViewGV.GetFocusedRowCellValue("duong").ToString();
            txtPhuong.Text = gridViewGV.GetFocusedRowCellValue("xa").ToString();
            txtQuan.Text = gridViewGV.GetFocusedRowCellValue("huyen").ToString();
            cbTinh.Text = gridViewGV.GetFocusedRowCellValue("tinh").ToString();
        }
        public void _EmpltyAllInfoText()
        {
            txtMagv.Text = "";
            txtTengv.Text = "";
            cbBomon.Text = "";
            rbNam.Checked = true;
            rbNu.Checked = false;
            txtMatKhau1.Text = "";
            txtMaDiachi.Text = "";
            txtNgaySinh.Text = "";
            txtSDT.Text = "";
            txtEmail.Text = "";
            txtTaiKhoan.Text = "";
            txtSonha.Text = "";
            txtDuong.Text = "";
            txtPhuong.Text = "";
            txtQuan.Text = "";
            cbTinh.Text = "";
        }
        private void _ReadOnly_Text(bool tt)
        {
            txtTengv.ReadOnly = tt;
            rbNam.Enabled = !tt;
            rbNu.Enabled = !tt;
            txtNgaySinh.ReadOnly = tt;
            txtSDT.ReadOnly = tt;
            txtEmail.ReadOnly = tt;
            txtTaiKhoan.ReadOnly = tt;
            txtSonha.ReadOnly = tt;
            txtDuong.ReadOnly = tt;
            txtPhuong.ReadOnly = tt;
            txtQuan.ReadOnly = tt;
            cbTinh.ReadOnly = tt;
            txtMatKhau1.ReadOnly = tt;
        }
        private void btnThem_Click(object sender, EventArgs e)
        {
            lblChucNangHientai.Text = _THEM_MOI;
            _EmpltyAllInfoText();
            _Enable_Button(btnLuu);
            _Enable_Button(btnSua, false);
            _Enable_Button(btnXoa, false);
            _ReadOnly_Text(false);
        }

        private void _Enable_Button(SimpleButton btn, bool trangthai = true)
        {
            if(!btn.Enabled==trangthai )btn.Enabled = trangthai;
        }
        private void All_button_enable(bool tt)
        {
            _Enable_Button(btnThem, tt);
            _Enable_Button(btnSua, tt);
            _Enable_Button(btnLuu, tt);
            _Enable_Button(btnXoa, tt);
            _Enable_Button(btnRefresh, tt);
        }

        private void btnRefresh_Click(object sender, EventArgs e)
        {
            All_button_enable(false);
            _Enable_Button(btnThem);
            _Enable_Button(btnRefresh);
            _EmpltyAllInfoText();
            _ReadOnly_Text(true);

            _bindingDataSourceGrid();
            lblChucNangHientai.Text = _KHONG_;

        }

        private void btnLuu_Click(object sender, EventArgs e)
        {
            // get địa chỉ
            DIACHI dc = new DIACHI()
            {
                soNha = txtSonha.Text,
                duong = txtDuong.Text,
                xa = txtPhuong.Text,
                huyen = txtQuan.Text,
                tinh = cbTinh.Text
            };
            NGUOIDUNG user = new NGUOIDUNG()
            {
                tenNguoiDung = txtTengv.Text,
                gioiTinh = (rbNam.Checked == true) ? "Nam" : "Nữ",
                ngaySinh = txtNgaySinh.DateTime,
                sDT = txtSDT.Text,
                email = txtEmail.Text,
                taiKhoan = txtTaiKhoan.Text,
                matKhau = handle.Encryptor(txtMatKhau1.Text),
        };
            
            if(lblChucNangHientai.Text.Equals(_THEM_MOI))
            {
                int re = bus_DiaChi.insert(dc);
                if(re < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình Thêm Địa chỉ !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }
                user.diaChi = bus_DiaChi.get_unique_last();
                int re2 = bus_NguoiDung.insert(user);
                if (re2 < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình NGƯỜI DÙNG !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }
                int id_user = bus_NguoiDung.get_unique_last();
                int id_bomon = (int)cbBomon.GetColumnValue("maBoMon");
                int re_gv = bus_GiaoVien.insert(new GIAOVIEN() { maNguoiDung = id_user, monDay = id_bomon });
                if (re_gv < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình GIÁO VIÊN !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }
                else {
                    MessageBox.Show("Lưu thành công GIÁO VIÊN !!!", "Thành công", MessageBoxButtons.OK);
                    _bindingDataSourceGrid();
                    _EmpltyAllInfoText();
                    lblChucNangHientai.Text = _KHONG_;
                }
            }
            else
            {
                dc.maDiaChi = Int32.Parse(txtMaDiachi.Text);
                if(dc.maDiaChi < 1)
                {
                    MessageBox.Show("Mã địa chỉ sửa không hợp lệ < 1 !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }
                user.maNguoiDung = Int32.Parse(txtMagv.Text);
                if (user.maNguoiDung < 1)
                {
                    MessageBox.Show("Mã Người dùng sửa không hợp lệ < 1 !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }
                int re_dc = bus_DiaChi.update(dc);
                if (re_dc < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình Sửa Địa chỉ !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }
                int re_ng = bus_NguoiDung.update(user);
                if (re_ng < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình Sửa Người dùng !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }
                int id_bomon = (int)cbBomon.GetColumnValue("maBoMon");
                int re_gv = bus_GiaoVien.update(new GIAOVIEN() { maNguoiDung = user.maNguoiDung, monDay = id_bomon });
                if (re_gv < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình Sửa Giáo viên !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }
                else
                {
                    MessageBox.Show("Sửa thành công GIÁO VIÊN !!!", "Thành công", MessageBoxButtons.OK);
                    _bindingDataSourceGrid();
                    _EmpltyAllInfoText();
                    lblChucNangHientai.Text = _KHONG_;
                }
            }
        }

        private void btnNullEmpty_Click(object sender, EventArgs e)
        {
            _EmpltyAllInfoText();
        }

        private void _bindingDataSourceGrid()
        {
            bs.DataSource = bus_GiaoVien.get_all_full_info();
            bindingNavigatordanhsachGV.BindingSource = bs;
            gridControlGV.DataSource = bs;
        }

        private void btnSua_Click(object sender, EventArgs e)
        {
            lblChucNangHientai.Text = _SUA_;
            _Enable_Button(btnLuu);
            _Enable_Button(btnThem, false);
            _Enable_Button(btnXoa, false);
            _Enable_Button(btnSua, false);
            _ReadOnly_Text(false);
        }

        private void btnXoa_Click(object sender, EventArgs e)
        {
            lblChucNangHientai.Text = _XOA_;
            int id_dc = Int32.Parse(txtMaDiachi.Text);
            int id_ng = Int32.Parse(txtMagv.Text);
            DialogResult dialogResult = MessageBox.Show("Bạn có chắc chắn xóa Giáo viên có mã là "+id_ng+" ???", "Xác nhận", MessageBoxButtons.YesNo);
            if (dialogResult == DialogResult.Yes)
            {
                //do something
                int re_gv = bus_GiaoVien.delete(id_ng);
                if(re_gv < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình Xóa Giáo viên !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }

                int re_ng = bus_NguoiDung.delete(id_ng);
                if (re_ng < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình Xóa Người dùng !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }

                int re_dc = bus_DiaChi.delete(id_dc);
                if (re_dc < 1)
                {
                    MessageBox.Show("Có lỗi trong quá trình Xóa Địa chỉ !!!", "Lỗi", MessageBoxButtons.OK);
                    return;
                }

                MessageBox.Show("Xóa thành công Giáo viên có mã là "+id_ng+" !!!", "Thành công", MessageBoxButtons.OK);
                btnRefresh_Click(null, null);
                lblChucNangHientai.Text = _KHONG_;
            }
        }

        private void gridControlGV_Click(object sender, EventArgs e)
        {

        }

        private void txtTengv_Validating(object sender, CancelEventArgs e)
        {
            //string errorMsg;
            if (String.IsNullOrEmpty(txtTengv.Text) && txtTengv.ReadOnly == false)
            {
                // Cancel the event and select the text to be corrected by the user.
                e.Cancel = true;
                txtTengv.Focus();
                this.errorProvidergv.SetError(txtTengv, "Họ tên học sinh không được trống");
            }
            else
            {
                e.Cancel = false;
                this.errorProvidergv.SetError(txtTengv, null);
            }
        }

        private void bindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {

        }
    }
}